@{
    ViewData["Title"] = "Home Page";
}
    <div class="text-center">
        <form id="App" v-show="a">
            <p v-if="errors.length">
                <b>Please correct the following error(s):</b>
                <ul>
                    <li v-for="error in errors">{{ error }}</li>
                </ul>
            </p>
            <p>
                <h4>Please Enter Details Below</h4>
            </p>
            <p>
                <label for="name">Forname</label>
                <input id="Forname"
                       v-model="Forname"
                       type="text"
                       name="Forname">
            </p>

            <p>
                <label for="name">Surname</label>
                <input id="Surname"
                       v-model="Surname"
                       type="text"
                       name="Surname">
            </p>

            <p>
                <label for="age">Date Of Birth</label>
                <input id="DateOfBirth"
                       v-model="DateOfBirth"
                       type="date"
                       name="DateOfBirth">
            </p>

            <p>
                <label for="movie">Email</label>
                <input id="Email"
                       v-model="Email"
                       type="text"
                       name="Email">
            </p>

            <p>
                <input type="submit" value="Submit" v-on:click="checkForm">
            </p>
        </form>
        <form id="SecondRow" v-show="a">
            <p v-if="errors.length">
                <b>Please correct the following error(s):</b>
                <ul>
                    <li v-for="error in errors">{{ error }}</li>
                </ul>
            </p>
            <p>
                <h4>Please Enter Details Below</h4>
            </p>
            <p>
                <label for="name">Enter Property Value</label>
                <input id="PropertyValue"
                       v-model="PropertyValue"
                       type="number"
                       name="PropertyValue">
            </p>

            <p>
                <label for="name">Enter Deposit Amount</label>
                <input id="DepositAmount"
                       v-model="DepositAmount"
                       type="number"
                       name="DepositAmount">
            </p>

            <p>
                <input type="submit" value="Submit" v-on:click="CheckMortgage">
            </p>
        </form>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.14.1/lodash.min.js"></script>

        <div id="flip-list-demo" class="demo">
            <button v-on:click="shuffle">Shuffle</button>
            <transition-group name="flip-list" tag="ul">
                <li v-for="item in items" v-bind:key="item">
                    {{ item }}
                </li>
            </transition-group>
        </div>
    </div>
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    new Vue({
        el: '#flip-list-demo',
        data: {
            items: [1, 2, 3, 4, 5, 6, 7, 8, 9]
        },
        methods: {
            shuffle: function () {
                this.items = _.shuffle(this.items)
            }
        }
    })
    var UserUniqueID = "";
    const SecondRow = new Vue({
        el: '#SecondRow',
        data: {
            errors: [],
            PropertyValue: null,
            DepositAmount: null,
            a: false
        },
        methods: {
            CheckMortgage: function (e) {
                if (this.PropertyValue && this.DepositAmount) {
                    PostPropertyData(this)
                }

                this.errors = [];

                if (!this.PropertyValue) {
                    this.errors.push('PropertyValue required.');
                }
                if (!this.DepositAmount) {
                    this.errors.push('DepositAmount required.');
                }
                e.preventDefault();
            }
        }
    });
    const app = new Vue({
        el: '#App',
        data: {
            errors: [],
            Forname: null,
            Surname: null,
            DateOfBirth: null,
            Email: null,
            a: true
        },
        methods: {
            checkForm: function (e) {
                if (this.Forname && this.Surname && this.Email) {
                    PostUserData(this)
                }

                this.errors = [];

                if (!this.Forname) {
                    this.errors.push('Forname required.');
                }
                if (!this.Surname) {
                    this.errors.push('Surname required.');
                }
                if (!this.Email) {
                    this.errors.push('Email required.');
                }
                e.preventDefault();
            }
        }
    });

    function PostPropertyData(Data) {
        var livedata = '@Url.Action("MortgageSearch")' + "?PropertyValue=" + Data.PropertyValue + "&DepositAmount=" + Data.DepositAmount + "&UniqueId=" + UserUniqueID;
        $.getJSON(livedata, function (response) {
            if (response == "Age") {
                Swal.fire('Sorry, You need to be over the age of 18 to continue')
            }
            else if (response == "LTV") {
                Swal.fire('Sorry, No Products Available For This Deposit Amount')
            }
        });
    }
    function PostUserData(Data) {
        var livedata = '@Url.Action("ApplicantRequest")' + "?Forname=" + Data.Forname + "&Surname=" + Data.Surname + "&Email=" + Data.Email + "&DateOfBirth=" + Data.DateOfBirth;
        $.getJSON(livedata, function (response) {
            SecondRow._data.a = true;
            app._data.a = false;
            UserUniqueID = response;
        });
    }
</script>
