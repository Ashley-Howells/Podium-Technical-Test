#pragma checksum "C:\Users\AshleyHowells\Documents\GitHub\Podium-Technical-Test\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8c843f0f7c3050d21ce0632f0ab17fe919788a9f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\AshleyHowells\Documents\GitHub\Podium-Technical-Test\Views\_ViewImports.cshtml"
using Podium_Technical_Test;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\AshleyHowells\Documents\GitHub\Podium-Technical-Test\Views\_ViewImports.cshtml"
using Podium_Technical_Test.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8c843f0f7c3050d21ce0632f0ab17fe919788a9f", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1ef9298be5c070efae86fb8cc50a8b38901c7561", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("UserDetails"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-show", new global::Microsoft.AspNetCore.Html.HtmlString("Visible"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("MortgageDetails"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\AshleyHowells\Documents\GitHub\Podium-Technical-Test\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"text-center\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8c843f0f7c3050d21ce0632f0ab17fe919788a9f4544", async() => {
                WriteLiteral(@"
        <p v-if=""errors.length"">
            <ul>
                <li v-for=""error in errors"">
                    <div class=""alert"">
                        <strong>{{ error }}</strong>
                    </div>
                </li>
            </ul>
        </p>
        <p>
            <h4>Please Enter Details Below</h4>
        </p>
        <p>
            <label for=""Forname"">Forname</label>
            <input id=""Forname""
                   v-model=""Forname""
                   type=""text""
                   name=""Forname"">
        </p>
        <p>
            <label for=""Surname"">Surname</label>
            <input id=""Surname""
                   v-model=""Surname""
                   type=""text""
                   name=""Surname"">
        </p>
        <p>
            <label for=""DateOfBirth"">Date Of Birth</label>
            <input id=""DateOfBirth""
                   v-model=""DateOfBirth""
                   type=""date""
                   name=""DateOfBirth"">
        </p>");
                WriteLiteral(@"
        <p>
            <label for=""Email"">Email</label>
            <input id=""Email""
                   v-model=""Email""
                   type=""text""
                   name=""Email"">
        </p>
        <p>
            <input type=""submit"" value=""Submit"" v-on:click=""CheckDetails"">
        </p>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8c843f0f7c3050d21ce0632f0ab17fe919788a9f7368", async() => {
                WriteLiteral(@"
        <p v-if=""errors.length"">
            <ul>
                <li v-for=""error in errors"">
                    <div class=""alert"">
                        <strong>{{ error }}</strong>
                    </div>
                </li>
            </ul>
        </p>
        <p>
            <h4>Please Enter Details Below</h4>
        </p>
        <p>
            <label for=""PropertyValue"">Enter Property Value</label>
            <input id=""PropertyValue""
                   v-model=""PropertyValue""
                   type=""number""
                   name=""PropertyValue"">
        </p>
        <p>
            <label for=""DepositAmount"">Enter Deposit Amount</label>
            <input id=""DepositAmount""
                   v-model=""DepositAmount""
                   type=""number""
                   name=""DepositAmount"">
        </p>
        <p>
            <input type=""submit"" value=""Submit"" v-on:click=""CheckMortgage"">
        </p>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <div id=""MortgageSearchResults"" v-show=""Visible"">
        <table class=""table"">
            <thead>
                <tr>
                    <th scope=""col"">Bank</th>
                    <th scope=""col"">Interest Rate</th>
                    <th scope=""col"">Type</th>
                </tr>
            </thead>
            <tbody>
                <transition-group name=""Results-List"" tag=""tr"">
                    <tr v-for=""item in Results"" :key=""item.id"">
                        <th scope=""row"">{{ item.Bank }}</th>
                        <td>{{ item.InterestRate }}</td>
                        <td>{{ item.Type }}</td>
                    </tr>
                </transition-group>
            </tbody>
        </table>
    </div>
</div>
<script src=""https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js""></script>
<script>
    var UserUniqueID = """";
    var MortgageSearchResults = new Vue({
        el: '#Mor");
            WriteLiteral(@"tgageSearchResults',
        data: {
            Visible: false,
            Results: []
        },
        methods: {
            flush() {
                this.Results.splice(0);
            }
        }
    });
    const MortgageDetails = new Vue({
        el: '#MortgageDetails',
        data: {
            errors: [],
            PropertyValue: null,
            DepositAmount: null,
            Visible: false
        },
        methods: {
            CheckMortgage: function (e) {
                if (this.PropertyValue && this.DepositAmount) {
                    PostPropertyData(this)
                }

                this.errors = [];

                if (!this.PropertyValue) {
                    this.errors.push('PropertyValue required.');
                }
                if (!this.DepositAmount) {
                    this.errors.push('DepositAmount required.');
                }
                e.preventDefault();
            }
        }
    });
    const UserDeta");
            WriteLiteral(@"ils = new Vue({
        el: '#UserDetails',
        data: {
            errors: [],
            Forname: null,
            Surname: null,
            DateOfBirth: null,
            Email: null,
            Visible: true
        },
        methods: {
            CheckDetails: function (e) {
                if (this.Forname && this.Surname && this.Email && this.DateOfBirth) {
                    PostUserData(this)
                }

                this.errors = [];
                if (!this.DateOfBirth) {
                    this.errors.push('Date Of Birth required.');
                }
                if (!this.Forname) {
                    this.errors.push('Forname required.');
                }
                if (!this.Surname) {
                    this.errors.push('Surname required.');
                }
                if (!this.Email) {
                    this.errors.push('Email required.');
                }
                e.preventDefault();
            }
        }
 ");
            WriteLiteral(@"   });

    function PostPropertyData(Data) {
        axios.get('/API/MortgageSearch', {
            params: {
                PropertyValue: Data.PropertyValue,
                DepositAmount: Data.DepositAmount,
                UniqueId: UserUniqueID,
            }
        })
            .then(function (response) {
                MortgageSearchResults.flush();
                MortgageSearchResults._data.Visible = true;
                if (response.data == ""Deposit To Low For Loan Amount"") {
                    MortgageSearchResults._data.Results.push({ InterestRate: ""No Results Found"" })
                }
                else {
                    response.data.forEach(element => MortgageSearchResults._data.Results.push({ id: element.id, Bank: element.bank, InterestRate: element.interestRate + ""%"", Type: element.type }));
                }
            })
            .catch(function (error) {
                console.log(error);
            });
    }
    function PostUserData(Data) {
");
            WriteLiteral(@"        axios.get('/API/ApplicantRequest', {
            params: {
                Forname: Data.Forname,
                Surname: Data.Surname,
                Email: Data.Email,
                DateOfBirth: Data.DateOfBirth
            }
        })
            .then(function (response) {
                if (response.data == ""Age Below 18"") {
                    UserDetails.errors.push('Sorry, You need to be at least 18 to apply');
                }
                else {
                    MortgageDetails._data.Visible = true;
                    UserDetails._data.Visible = false;
                    UserUniqueID = response.data;
                }
            })
            .catch(function (error) {
                console.log(error);
            });
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
